<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: perl | blog on github]]></title>
  <link href="http://nekoya.github.io/blog/categories/perl/atom.xml" rel="self"/>
  <link href="http://nekoya.github.io/"/>
  <updated>2013-07-03T11:31:20+09:00</updated>
  <id>http://nekoya.github.io/</id>
  <author>
    <name><![CDATA[nekoya]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[PerlのCrypt::CBCとPythonのPyCryptoで暗号文字列をやりとりする]]></title>
    <link href="http://nekoya.github.io/blog/2013/03/12/python-crypt-cbc/"/>
    <updated>2013-03-12T09:49:00+09:00</updated>
    <id>http://nekoya.github.io/blog/2013/03/12/python-crypt-cbc</id>
    <content type="html"><![CDATA[<p>ここ数年はPerlで暗号を扱う時は<a href="http://search.cpan.org/~jesus/Mcrypt-2.5.7.0/Mcrypt.pm">Mcrypt</a>を使っていますが、少し前の時代だと<a href="http://search.cpan.org/~lds/Crypt-CBC-2.32/CBC.pm">Crypt::CBC</a>を使ったりしてました。世間の流れは知らないけど、Mcrypt使っておけば他のシステムとデータをやりとりする時にお互いやりやすいよねという。</p>

<p>Crypt::CBCで作られた暗号文字列をPythonで復号するケースがあったのですが、そのまま素直にやるとうまくいきません。</p>

<p>padding周りかなと思ったけど、どうやらkeyがそのままでは使えないらしい。stackoverflowにズバリそのまま<a href="http://stackoverflow.com/questions/14859006/using-pycrypto-to-decrypt-perl-encrypted-password">Using PyCrypto to decrypt Perl encrypted password</a>があったのでメモ。</p>

<p>{% gist 5088592 publish_hex_key.pl %}</p>

<p>こんな具合にして変換したkeyをPythonのコードに埋め込みます。</p>

<p>{% gist 5088592 decrypt.py %}</p>

<p>あとはpaddingをそれっぽく調整して、こんなもんでいけたっぽいです。</p>
]]></content>
  </entry>
  
</feed>
